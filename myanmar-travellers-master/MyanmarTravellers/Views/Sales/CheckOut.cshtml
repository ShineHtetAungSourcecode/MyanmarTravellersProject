@model MyanmarTravellers.Models.Sale
@using MyanmarTravellers.Models
@{
    ViewBag.Title = "CheckOut";
}

<h2>CheckOut</h2>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Seat No.</th>
            <th>Date</th>
            <th>From</th>
            <th>To</th>
            <th>Amount</th>
        </tr>
    </thead>
    <tbody>
    @foreach(var ticket in ViewBag.Tickets)
    {
    <tr>
        <td>@ticket.Seat.seat_no</td>
        <td>@ticket.Cours.date</td>
        <td>
            @{
                MMTravellersEntities db = new MMTravellersEntities();
                var fromlocation = db.Locations.Find(ticket.Cours.from_id);
            }
            @fromlocation.name
        </td>
        <td>
            @{
                var tolocation = db.Locations.Find(ticket.Cours.to_id);
            }
            @tolocation.name
        </td>
        <td>@ticket.Cours.fee_per_seat</td>
    </tr>
    }
    <tr>
        <td colspan="3"></td>
        <td><strong>Total</strong></td>
        <td>@ViewBag.Amount</td>
    </tr>
    
</tbody>
</table>

<hr>

<form action="/Sales/CheckOut" method="POST">

    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.customer_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customer_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customer_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nrc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nrc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nrc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.total, new { Value = ViewBag.Amount})

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">Checkout</button>
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
